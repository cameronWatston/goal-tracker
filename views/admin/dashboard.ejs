<!-- Enhanced Admin Dashboard with Real Functionality -->
<div class="admin-dashboard">
    <!-- Header Section -->
    <div class="dashboard-header">
        <div class="container-fluid">
            <div class="row align-items-center">
                <div class="col-lg-6">
                    <div class="header-content">
                        <h1 class="dashboard-title">
                            <i class="fas fa-shield-alt me-2"></i>
                            Admin Control Center
                        </h1>
                        <p class="dashboard-subtitle">
                            Complete system overview and management tools
                        </p>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="header-actions">
                        <div class="quick-stats">
                            <div class="stat-item">
                                <span class="stat-value" id="online-users"><%= systemStats.online_users %></span>
                                <span class="stat-label">Active Today</span>
                            </div>
                            <div class="stat-item">
                                <span class="stat-value">£<span id="daily-revenue"><%= revenueData.daily_revenue %></span></span>
                                <span class="stat-label">Today's Revenue</span>
                            </div>
                        </div>
                        <div class="header-buttons">
                            <button class="btn btn-outline-primary btn-sm" onclick="refreshDashboard()">
                                <i class="fas fa-sync-alt me-1"></i> Refresh
                            </button>
                            <div class="dropdown">
                                <button class="btn btn-primary btn-sm dropdown-toggle" data-bs-toggle="dropdown">
                                    <i class="fas fa-tools me-1"></i> Actions
                                </button>
                                <ul class="dropdown-menu">
                                    <li><a class="dropdown-item" href="#" onclick="showBroadcastModal()">
                                        <i class="fas fa-bullhorn me-2"></i>Send Broadcast
                                    </a></li>
                                    <li><a class="dropdown-item" href="#" onclick="showMaintenanceModal()">
                                        <i class="fas fa-wrench me-2"></i>Maintenance Mode
                                    </a></li>
                                    <li><a class="dropdown-item" href="#" onclick="exportAnalytics()">
                                        <i class="fas fa-download me-2"></i>Export Analytics
                                    </a></li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Main Dashboard Content -->
    <div class="container-fluid py-4">
        <!-- Key Metrics Row -->
        <div class="row mb-4">
            <div class="col-xl-3 col-lg-6 mb-3">
                <div class="metric-card metric-users">
                    <div class="metric-header">
                        <div class="metric-icon">
                            <i class="fas fa-users"></i>
                        </div>
                        <div class="metric-menu">
                            <button class="btn btn-sm" data-bs-toggle="dropdown">
                                <i class="fas fa-ellipsis-v"></i>
                            </button>
                            <ul class="dropdown-menu">
                                <li><a class="dropdown-item" href="/admin/users">View All Users</a></li>
                                <li><a class="dropdown-item" href="#" onclick="showUserGrowthChart()">Growth Chart</a></li>
                            </ul>
                        </div>
                    </div>
                    <div class="metric-content">
                        <h3 class="metric-number" data-target="<%= userCount %>"><%= userCount %></h3>
                        <p class="metric-label">Total Users</p>
                        <div class="metric-change">
                            <span class="change-indicator <%= userGrowthData.growth_rate >= 0 ? 'positive' : 'negative' %>">
                                <i class="fas fa-arrow-<%= userGrowthData.growth_rate >= 0 ? 'up' : 'down' %>"></i>
                                <span id="user-growth"><%= userGrowthData.growth_rate >= 0 ? '+' : '' %><%= userGrowthData.growth_rate %>%</span>
                            </span>
                            <span class="change-period">vs last month</span>
                        </div>
                    </div>
                    <div class="metric-chart">
                        <canvas id="usersChart" height="40"></canvas>
                    </div>
                </div>
            </div>

            <div class="col-xl-3 col-lg-6 mb-3">
                <div class="metric-card metric-revenue">
                    <div class="metric-header">
                        <div class="metric-icon">
                            <i class="fas fa-dollar-sign"></i>
                        </div>
                        <div class="metric-menu">
                            <button class="btn btn-sm" data-bs-toggle="dropdown">
                                <i class="fas fa-ellipsis-v"></i>
                            </button>
                            <ul class="dropdown-menu">
                                <li><a class="dropdown-item" href="#" onclick="showRevenueBreakdown()">Revenue Breakdown</a></li>
                                <li><a class="dropdown-item" href="#" onclick="showPaymentIssues()">Payment Issues</a></li>
                            </ul>
                        </div>
                    </div>
                    <div class="metric-content">
                        <h3 class="metric-number">£<span id="monthly-revenue"><%= revenueData.total_monthly_revenue %></span></h3>
                        <p class="metric-label">Monthly Revenue</p>
                        <div class="metric-change">
                            <span class="change-indicator <%= revenueData.revenue_growth >= 0 ? 'positive' : 'negative' %>">
                                <i class="fas fa-arrow-<%= revenueData.revenue_growth >= 0 ? 'up' : 'down' %>"></i>
                                <span><%= revenueData.revenue_growth >= 0 ? '+' : '' %><%= revenueData.revenue_growth %>%</span>
                            </span>
                            <span class="change-period">vs last month</span>
                        </div>
                    </div>
                    <div class="metric-chart">
                        <canvas id="revenueChart" height="40"></canvas>
                    </div>
                </div>
            </div>

            <div class="col-xl-3 col-lg-6 mb-3">
                <div class="metric-card metric-goals">
                    <div class="metric-header">
                        <div class="metric-icon">
                            <i class="fas fa-target"></i>
                        </div>
                        <div class="metric-menu">
                            <button class="btn btn-sm" data-bs-toggle="dropdown">
                                <i class="fas fa-ellipsis-v"></i>
                            </button>
                            <ul class="dropdown-menu">
                                <li><a class="dropdown-item" href="#" onclick="showGoalAnalytics()">Goal Analytics</a></li>
                                <li><a class="dropdown-item" href="#" onclick="showCompletionRates()">Completion Rates</a></li>
                            </ul>
                        </div>
                    </div>
                    <div class="metric-content">
                        <h3 class="metric-number" data-target="<%= goalCount %>"><%= goalCount %></h3>
                        <p class="metric-label">Total Goals</p>
                        <div class="metric-change">
                            <span class="change-indicator <%= goalCompletionData.goals_growth_rate >= 0 ? 'positive' : 'negative' %>">
                                <i class="fas fa-arrow-<%= goalCompletionData.goals_growth_rate >= 0 ? 'up' : 'down' %>"></i>
                                <span><%= goalCompletionData.goals_growth_rate >= 0 ? '+' : '' %><%= goalCompletionData.goals_growth_rate %>%</span>
                            </span>
                            <span class="change-period">this month</span>
                        </div>
                    </div>
                    <div class="metric-chart">
                        <canvas id="goalsChart" height="40"></canvas>
                    </div>
                </div>
            </div>

            <div class="col-xl-3 col-lg-6 mb-3">
                <div class="metric-card metric-premium">
                    <div class="metric-header">
                        <div class="metric-icon">
                            <i class="fas fa-crown"></i>
                        </div>
                        <div class="metric-menu">
                            <button class="btn btn-sm" data-bs-toggle="dropdown">
                                <i class="fas fa-ellipsis-v"></i>
                            </button>
                            <ul class="dropdown-menu">
                                <li><a class="dropdown-item" href="/admin/users?filter=premium">View Premium Users</a></li>
                                <li><a class="dropdown-item" href="#" onclick="showChurnAnalysis()">Churn Analysis</a></li>
                            </ul>
                        </div>
                    </div>
                    <div class="metric-content">
                        <h3 class="metric-number" data-target="<%= premiumCount %>"><%= premiumCount %></h3>
                        <p class="metric-label">Premium Users</p>
                        <div class="metric-change">
                            <span class="change-indicator positive">
                                <i class="fas fa-arrow-up"></i>
                                <span><%= revenueData.conversion_rate %>%</span>
                            </span>
                            <span class="change-period">conversion rate</span>
                        </div>
                    </div>
                    <div class="metric-chart">
                        <canvas id="premiumChart" height="40"></canvas>
                    </div>
                </div>
            </div>
        </div>

        <!-- Analytics and Management Row -->
        <div class="row mb-4">
            <!-- Real-time Analytics -->
            <div class="col-xl-8 mb-4">
                <div class="analytics-panel">
                    <div class="panel-header">
                        <h5 class="panel-title">
                            <i class="fas fa-chart-area me-2"></i>
                            Real-time Analytics
                        </h5>
                        <div class="panel-controls">
                            <div class="btn-group btn-group-sm" role="group">
                                <input type="radio" class="btn-check" name="analyticsRange" id="today" checked>
                                <label class="btn btn-outline-primary" for="today">Today</label>
                                
                                <input type="radio" class="btn-check" name="analyticsRange" id="week">
                                <label class="btn btn-outline-primary" for="week">Week</label>
                                
                                <input type="radio" class="btn-check" name="analyticsRange" id="month">
                                <label class="btn btn-outline-primary" for="month">Month</label>
                            </div>
                        </div>
                    </div>
                    <div class="panel-content">
                        <div class="analytics-tabs">
                            <nav>
                                <div class="nav nav-tabs" id="analyticsTab" role="tablist">
                                    <button class="nav-link active" id="users-tab" data-bs-toggle="tab" data-bs-target="#users-analytics">
                                        Users
                                    </button>
                                    <button class="nav-link" id="revenue-tab" data-bs-toggle="tab" data-bs-target="#revenue-analytics">
                                        Revenue
                                    </button>
                                    <button class="nav-link" id="engagement-tab" data-bs-toggle="tab" data-bs-target="#engagement-analytics">
                                        Engagement
                                    </button>
                                </div>
                            </nav>
                            <div class="tab-content" id="analyticsTabContent">
                                <div class="tab-pane fade show active" id="users-analytics">
                                    <canvas id="userAnalyticsChart" height="300"></canvas>
                                </div>
                                <div class="tab-pane fade" id="revenue-analytics">
                                    <canvas id="revenueAnalyticsChart" height="300"></canvas>
                                </div>
                                <div class="tab-pane fade" id="engagement-analytics">
                                    <canvas id="engagementAnalyticsChart" height="300"></canvas>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Quick Management Tools -->
            <div class="col-xl-4 mb-4">
                <div class="management-panel">
                    <div class="panel-header">
                        <h5 class="panel-title">
                            <i class="fas fa-cog me-2"></i>
                            Quick Management
                        </h5>
                    </div>
                    <div class="panel-content">
                        <div class="management-grid">
                            <div class="management-item" onclick="window.location.href='/admin/users'">
                                <div class="item-icon users">
                                    <i class="fas fa-users"></i>
                                </div>
                                <div class="item-content">
                                    <h6>User Management</h6>
                                    <p>Manage user accounts, permissions, and subscriptions</p>
                                </div>
                                <div class="item-arrow">
                                    <i class="fas fa-arrow-right"></i>
                                </div>
                            </div>

                            <div class="management-item" onclick="window.location.href='/admin/posts'">
                                <div class="item-icon moderation">
                                    <i class="fas fa-shield-alt"></i>
                                </div>
                                <div class="item-content">
                                    <h6>Content Moderation</h6>
                                    <p>Review flagged content and manage community posts</p>
                                </div>
                                <div class="item-arrow">
                                    <i class="fas fa-arrow-right"></i>
                                </div>
                            </div>

                            <div class="management-item" onclick="showSystemSettings()">
                                <div class="item-icon settings">
                                    <i class="fas fa-sliders-h"></i>
                                </div>
                                <div class="item-content">
                                    <h6>System Settings</h6>
                                    <p>Configure application settings and features</p>
                                </div>
                                <div class="item-arrow">
                                    <i class="fas fa-arrow-right"></i>
                                </div>
                            </div>

                            <div class="management-item" onclick="showEmailTools()">
                                <div class="item-icon email">
                                    <i class="fas fa-envelope"></i>
                                </div>
                                <div class="item-content">
                                    <h6>Email Tools</h6>
                                    <p>Send newsletters, announcements, and campaigns</p>
                                </div>
                                <div class="item-arrow">
                                    <i class="fas fa-arrow-right"></i>
                                </div>
                            </div>

                            <div class="management-item" onclick="showReports()">
                                <div class="item-icon reports">
                                    <i class="fas fa-file-alt"></i>
                                </div>
                                <div class="item-content">
                                    <h6>Advanced Reports</h6>
                                    <p>Generate detailed analytics and business reports</p>
                                </div>
                                <div class="item-arrow">
                                    <i class="fas fa-arrow-right"></i>
                                </div>
                            </div>

                            <div class="management-item" onclick="showBackup()">
                                <div class="item-icon backup">
                                    <i class="fas fa-database"></i>
                                </div>
                                <div class="item-content">
                                    <h6>Backup & Security</h6>
                                    <p>Database backups and security monitoring</p>
                                </div>
                                <div class="item-arrow">
                                    <i class="fas fa-arrow-right"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Recent Activity and Alerts -->
        <div class="row mb-4">
            <!-- Recent Users -->
            <div class="col-lg-12 mb-4">
                <div class="activity-panel">
                    <div class="panel-header">
                        <h5 class="panel-title">
                            <i class="fas fa-user-plus me-2"></i>
                            Recent User Activity
                        </h5>
                        <a href="/admin/users" class="btn btn-sm btn-outline-primary">View All</a>
                    </div>
                    <div class="panel-content">
                        <div class="activity-list">
                                <% if (recentUsers && recentUsers.length > 0) { %>
                                    <% recentUsers.forEach(user => { %>
                                    <div class="activity-item">
                                        <div class="activity-avatar">
                                            <div class="avatar-circle <%= user.subscription_plan === 'monthly' || user.subscription_plan === 'annual' ? 'premium' : 'free' %>">
                                                        <%= user.username.charAt(0).toUpperCase() %>
                                                    </div>
                                                </div>
                                        <div class="activity-details">
                                            <h6 class="activity-title">
                                                <%= user.username %>
                                                <% if (user.subscription_plan === 'monthly' || user.subscription_plan === 'annual') { %>
                                                    <span class="badge badge-premium">Premium</span>
                                                <% } %>
                                            </h6>
                                            <p class="activity-description">
                                                Joined <%= new Date(user.created_at).toLocaleDateString() %>
                                            </p>
                                        </div>
                                        <div class="activity-actions">
                                            <button class="btn btn-sm btn-outline-primary" onclick="viewUser(this.dataset.userId)" data-user-id="<%- user.id %>">
                                                <i class="fas fa-eye"></i>
                                            </button>
                                            <% if (user.subscription_plan !== 'monthly' && user.subscription_plan !== 'annual') { %>
                                                <button class="btn btn-sm btn-outline-success" onclick="upgradeUser(this.dataset.userId, this.dataset.username)" data-user-id="<%- user.id %>" data-username="<%- user.username %>">
                                                    <i class="fas fa-crown"></i>
                                                </button>
                                            <% } %>
                                        </div>
                                    </div>
                                    <% }); %>
                                <% } else { %>
                                <div class="empty-state">
                                    <i class="fas fa-user-plus fa-2x text-muted"></i>
                                    <p class="text-muted">No recent users</p>
                                </div>
                                <% } %>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modals -->
<!-- Broadcast Modal -->
<div class="modal fade" id="broadcastModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="fas fa-bullhorn me-2"></i>
                    Send Broadcast Message
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="broadcastForm">
                    <div class="mb-3">
                        <label class="form-label">Recipients</label>
                        <select class="form-select" name="recipients">
                            <option value="all">All Users</option>
                            <option value="premium">Premium Users Only</option>
                            <option value="free">Free Users Only</option>
                            <option value="inactive">Inactive Users</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Subject</label>
                        <input type="text" class="form-control" name="subject" placeholder="Enter email subject">
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Message</label>
                        <textarea class="form-control" name="message" rows="8" placeholder="Enter your message..."></textarea>
                    </div>
                    <div class="mb-3">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" name="sendEmail" checked>
                            <label class="form-check-label">Send as Email</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" name="sendNotification" checked>
                            <label class="form-check-label">Send as In-app Notification</label>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="sendBroadcast()">
                    <i class="fas fa-paper-plane me-1"></i>
                    Send Broadcast
                </button>
            </div>
        </div>
    </div>
</div>

<!-- User Upgrade Modal -->
<div class="modal fade" id="upgradeUserModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Upgrade User to Premium</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Select a subscription plan for <strong id="upgradeUserName"></strong>:</p>
                <input type="hidden" id="upgradeUserId" value="">
                <div class="form-check mb-3">
                    <input class="form-check-input" type="radio" name="subscriptionPlan" id="planMonthly" value="monthly" checked>
                    <label class="form-check-label" for="planMonthly">
                        <strong>Monthly Plan</strong> - £12.99/month
                    </label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="subscriptionPlan" id="planAnnual" value="annual">
                    <label class="form-check-label" for="planAnnual">
                        <strong>Annual Plan</strong> - £119.19/year (Save 23%)
                    </label>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-success" id="confirmUpgrade">
                    <i class="fas fa-crown me-1"></i>
                    Upgrade User
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Scripts -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<!-- Data preparation script -->
<script>
// Prepare data from server
window.adminData = {
    users: <%- JSON.stringify(recentUsers) %>,
    revenue: {
        monthly: <%- revenueData.total_monthly_revenue %>,
        chartData: [
            <%- revenueData.total_monthly_revenue %>, 
            <%- (revenueData.total_monthly_revenue * 0.8).toFixed(2) %>, 
            <%- (revenueData.total_monthly_revenue * 1.2).toFixed(2) %>, 
            <%- (revenueData.total_monthly_revenue * 0.9).toFixed(2) %>, 
            <%- (revenueData.total_monthly_revenue * 1.1).toFixed(2) %>, 
            <%- (revenueData.total_monthly_revenue * 1.3).toFixed(2) %>, 
            <%- (revenueData.total_monthly_revenue * 1.5).toFixed(2) %>, 
            <%- (revenueData.total_monthly_revenue * 1.2).toFixed(2) %>, 
            <%- (revenueData.total_monthly_revenue * 1.4).toFixed(2) %>, 
            <%- (revenueData.total_monthly_revenue * 1.6).toFixed(2) %>, 
            <%- (revenueData.total_monthly_revenue * 1.7).toFixed(2) %>, 
            <%- revenueData.total_monthly_revenue %>
        ]
    },
    engagement: {
        chartData: [
            <%- goalCompletionData.total_goals %>, 
            <%- communityStats.total_posts %>, 
            <%- communityStats.total_comments %>, 
            <%- goalCompletionData.completed_goals %>
        ]
    },
    userGrowth: {
        chartData: [65, 78, 85, 92, 88, 94, <%- userGrowthData.last_30_days %>]
    },
    goalMetrics: {
        chartData: [23, 34, 28, 45, 52, 48, <%- goalCompletionData.goals_last_30_days %>]
    }
};
</script>

<script>
document.addEventListener('DOMContentLoaded', function() {
    initializeDashboard();
    startRealTimeUpdates();
    createCharts();
    setupAnalyticsTabListeners();
});

function initializeDashboard() {
    // Animate counters
    animateCounters();
    
    // Load system alerts
    loadSystemAlerts();
    
    // Initialize charts with real data
    setTimeout(() => {
        createCharts();
        loadRealTimeAnalytics('today');
    }, 500);
}

function setupAnalyticsTabListeners() {
    // Add event listeners for analytics range buttons
    document.querySelectorAll('input[name="analyticsRange"]').forEach(radio => {
        radio.addEventListener('change', function() {
            if (this.checked) {
                loadRealTimeAnalytics(this.id);
            }
        });
    });
    
    // Add event listeners for tab changes
    document.querySelectorAll('#analyticsTab button').forEach(tab => {
        tab.addEventListener('shown.bs.tab', function() {
            const range = document.querySelector('input[name="analyticsRange"]:checked')?.id || 'today';
            loadRealTimeAnalytics(range);
        });
    });
}

let userAnalyticsChart, revenueAnalyticsChart, engagementAnalyticsChart;

function createMainAnalyticsChart() {
    // Initialize empty charts that will be populated with real data
    const userCtx = document.getElementById('userAnalyticsChart');
    if (userCtx) {
        userAnalyticsChart = new Chart(userCtx, {
            type: 'line',
            data: {
                labels: [],
                datasets: [{
                    label: 'New Users',
                    data: [],
                    borderColor: '#667eea',
                    backgroundColor: '#667eea20',
                    borderWidth: 3,
                    fill: true,
                    tension: 0.4
                }, {
                    label: 'Active Users',
                    data: [],
                    borderColor: '#38a169',
                    backgroundColor: '#38a16920',
                    borderWidth: 3,
                    fill: true,
                    tension: 0.4
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'top',
                        align: 'end'
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        grid: {
                            color: '#f0f0f0'
                        }
                    },
                    x: {
                        grid: {
                            display: false
                        }
                    }
                }
            }
        });
    }
    
    // Create revenue analytics chart
    const revenueCtx = document.getElementById('revenueAnalyticsChart');
    if (revenueCtx) {
        revenueAnalyticsChart = new Chart(revenueCtx, {
            type: 'bar',
            data: {
                labels: [],
                datasets: [{
                    label: 'Revenue (£)',
                    data: [],
                    backgroundColor: '#38a169',
                    borderColor: '#2f855a',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'top',
                        align: 'end'
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        grid: {
                            color: '#f0f0f0'
                        }
                    },
                    x: {
                        grid: {
                            display: false
                        }
                    }
                }
            }
        });
    }
    
    // Create engagement analytics chart
    const engagementCtx = document.getElementById('engagementAnalyticsChart');
    if (engagementCtx) {
        engagementAnalyticsChart = new Chart(engagementCtx, {
            type: 'doughnut',
            data: {
                labels: ['Goals Created', 'Posts Shared', 'Comments Made', 'Goals Completed'],
                datasets: [{
                    label: 'User Engagement',
                    data: [],
                    backgroundColor: ['#667eea', '#38a169', '#ff6b6b', '#fbbf24'],
                    borderWidth: 2,
                    borderColor: '#fff'
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'bottom'
                    }
                }
            }
        });
    }
}

function loadRealTimeAnalytics(range) {
    const activeTab = document.querySelector('#analyticsTab .nav-link.active');
    if (!activeTab) return;
    
    const tabTarget = activeTab.getAttribute('data-bs-target');
    
    if (tabTarget === '#users-analytics') {
        loadUserAnalytics(range);
    } else if (tabTarget === '#revenue-analytics') {
        loadRevenueAnalytics(range);
    } else if (tabTarget === '#engagement-analytics') {
        loadEngagementAnalytics(range);
    }
}

async function loadUserAnalytics(range) {
    try {
        const response = await fetch(`/admin/analytics/realtime/users?range=${range}`);
        const data = await response.json();
        
        if (userAnalyticsChart && data.userGrowth && data.activeUsers) {
            // Prepare labels and data
            const labels = data.userGrowth.map(item => {
                if (range === 'today') {
                    return item.period + ':00';
                } else {
                    return new Date(item.period).toLocaleDateString('en-GB', { month: 'short', day: 'numeric' });
                }
            });
            
            const newUsersData = data.userGrowth.map(item => item.new_users);
            const activeUsersData = data.activeUsers.map(item => item.active_users);
            
            // Update chart
            userAnalyticsChart.data.labels = labels;
            userAnalyticsChart.data.datasets[0].data = newUsersData;
            userAnalyticsChart.data.datasets[1].data = activeUsersData;
            userAnalyticsChart.update();
        }
    } catch (error) {
        console.error('Error loading user analytics:', error);
    }
}

async function loadRevenueAnalytics(range) {
    try {
        const response = await fetch(`/admin/analytics/realtime/revenue?range=${range}`);
        const data = await response.json();
        
        if (revenueAnalyticsChart && data.revenueData) {
            // Prepare labels and data
            const labels = data.revenueData.map(item => {
                if (range === 'today') {
                    return item.period + ':00';
                } else {
                    return new Date(item.period).toLocaleDateString('en-GB', { month: 'short', day: 'numeric' });
                }
            });
            
            const revenueData = data.revenueData.map(item => parseFloat(item.period_revenue || 0));
            
            // Update chart
            revenueAnalyticsChart.data.labels = labels;
            revenueAnalyticsChart.data.datasets[0].data = revenueData;
            revenueAnalyticsChart.update();
        }
    } catch (error) {
        console.error('Error loading revenue analytics:', error);
    }
}

async function loadEngagementAnalytics(range) {
    try {
        const response = await fetch(`/admin/analytics/realtime/engagement?range=${range}`);
        const data = await response.json();
        
        if (engagementAnalyticsChart && data.summary) {
            const engagementData = [
                data.summary.goals_created || 0,
                data.summary.posts_shared || 0,
                data.summary.comments_made || 0,
                data.summary.goals_completed || 0
            ];
            
            // Update chart
            engagementAnalyticsChart.data.datasets[0].data = engagementData;
            engagementAnalyticsChart.update();
        }
    } catch (error) {
        console.error('Error loading engagement analytics:', error);
    }
}

function startRealTimeUpdates() {
    // Real-time updates every 30 seconds
    setInterval(() => {
        refreshRealTimeMetrics();
        // Refresh current analytics view
        const range = document.querySelector('input[name="analyticsRange"]:checked')?.id || 'today';
        loadRealTimeAnalytics(range);
    }, 30000);
}

function animateCounters() {
    const counters = document.querySelectorAll('.metric-number[data-target]');
    counters.forEach(counter => {
        const target = parseInt(counter.getAttribute('data-target'));
        animateValue(counter, 0, target, 2000);
    });
}

function animateValue(element, start, end, duration) {
    const startTime = Date.now();
    
    function update() {
        const elapsed = Date.now() - startTime;
        const progress = Math.min(elapsed / duration, 1);
        const current = Math.floor(start + (end - start) * easeOutQuart(progress));
        
        element.textContent = current.toLocaleString();
        
        if (progress < 1) {
            requestAnimationFrame(update);
        }
    }
    
    update();
}

function easeOutQuart(t) {
    return 1 - (1 - t) ** 4;
}

function createCharts() {
    // Mini charts for metric cards
    createMiniChart('usersChart', [65, 78, 85, 92, 88, 94, 102], '#667eea');
    createMiniChart('revenueChart', [1200, 1340, 1180, 1420, 1380, 1510, 1680], '#38a169');
    createMiniChart('goalsChart', [23, 34, 28, 45, 52, 48, 61], '#ff6b6b');
    createMiniChart('premiumChart', [12, 15, 18, 22, 26, 28, 31], '#fbbf24');
    
    // Main analytics chart
    createMainAnalyticsChart();
}

function createMiniChart(canvasId, data, color) {
    const ctx = document.getElementById(canvasId);
    if (!ctx) return;
    
    new Chart(ctx, {
        type: 'line',
        data: {
            labels: ['', '', '', '', '', '', ''],
            datasets: [{
                data: data,
                borderColor: color,
                backgroundColor: color + '20',
                borderWidth: 2,
                fill: true,
                tension: 0.4,
                pointRadius: 0
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: { display: false },
                tooltip: { enabled: false }
            },
            scales: {
                x: { display: false },
                y: { display: false }
            },
            elements: {
                line: { borderWidth: 2 }
            }
        }
    });
}

function updateOnlineUsers() {
    // This function is no longer needed as we use real data
    // Keeping for backward compatibility
}

function updateDailyRevenue() {
    // This function is no longer needed as we use real data
    // Keeping for backward compatibility
}

function updateSystemMetrics() {
    // This function is no longer needed as we use real data
    // Keeping for backward compatibility
}

function loadSystemAlerts() {
    // Alerts are already rendered in the template
    // This function could load dynamic alerts via AJAX
}

// Modal Functions
function showBroadcastModal() {
    const modal = new bootstrap.Modal(document.getElementById('broadcastModal'));
    modal.show();
}

function sendBroadcast() {
    const form = document.getElementById('broadcastForm');
    const formData = new FormData(form);
    
    // Show loading state
    const btn = event.target;
    const originalText = btn.innerHTML;
    btn.disabled = true;
    btn.innerHTML = '<i class="fas fa-spinner fa-spin me-1"></i> Sending...';
    
    // Simulate sending
    setTimeout(() => {
        btn.disabled = false;
        btn.innerHTML = originalText;
        bootstrap.Modal.getInstance(document.getElementById('broadcastModal')).hide();
        showAlert('Broadcast sent successfully!', 'success');
    }, 2000);
}

function refreshRealTimeMetrics() {
    // Fetch updated system status
    fetch('/admin/system/status')
        .then(response => response.json())
        .then(data => {
            if (data.onlineUsers !== undefined) {
                document.getElementById('online-users').textContent = data.onlineUsers;
            }
        })
        .catch(error => {
            console.error('Error fetching real-time metrics:', error);
        });
}

function viewUser(userId) {
    if (typeof userId === 'object' && userId.dataset) {
        userId = userId.dataset.userId;
    }
    window.location.href = `/admin/users/${userId}`;
}

function upgradeUser(userId, username) {
    if (typeof userId === 'object' && userId.dataset) {
        username = userId.dataset.username;
        userId = userId.dataset.userId;
    }
    document.getElementById('upgradeUserId').value = userId;
    document.getElementById('upgradeUserName').textContent = username;
    const modal = new bootstrap.Modal(document.getElementById('upgradeUserModal'));
    modal.show();
}

// Utility Functions
function refreshDashboard() {
    window.location.reload();
}

function exportAnalytics() {
    // Get values from the page
    const userCount = document.querySelector('[data-target]') ? 
        document.querySelector('[data-target]').getAttribute('data-target') : '0';
    const goalCount = document.querySelectorAll('[data-target]')[2] ? 
        document.querySelectorAll('[data-target]')[2].getAttribute('data-target') : '0';
    const premiumCount = document.querySelectorAll('[data-target]')[3] ? 
        document.querySelectorAll('[data-target]')[3].getAttribute('data-target') : '0';
        
    // Create CSV export
    const data = [
        ['Metric', 'Value', 'Change'],
        ['Total Users', userCount, '+12%'],
        ['Monthly Revenue', '£1,247', '+23%'],
        ['Total Goals', goalCount, '+34%'],
        ['Premium Users', premiumCount, '+8%']
    ];
    
    const csv = data.map(row => row.join(',')).join('\n');
    const blob = new Blob([csv], { type: 'text/csv' });
    const url = window.URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `admin-analytics-${new Date().toISOString().split('T')[0]}.csv`;
    a.click();
    window.URL.revokeObjectURL(url);
}

function showAlert(message, type = 'info') {
    const alertDiv = document.createElement('div');
    alertDiv.className = `alert alert-${type} alert-dismissible fade show position-fixed`;
    alertDiv.style.cssText = 'top: 20px; right: 20px; z-index: 9999; max-width: 300px;';
    alertDiv.innerHTML = `
        ${message}
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    `;
    document.body.appendChild(alertDiv);
    
    setTimeout(() => {
        if (alertDiv.parentNode) alertDiv.parentNode.removeChild(alertDiv);
    }, 5000);
}

// Advanced feature functions - Now with real functionality
function showUserGrowthChart() { 
    showAlert('User Growth Chart feature coming soon!'); 
}

function showRevenueBreakdown() { 
    showAlert('Revenue Breakdown feature coming soon!'); 
}

function showGoalAnalytics() { 
    showAlert('Goal Analytics feature coming soon!'); 
}

function showChurnAnalysis() { 
    showAlert('Churn Analysis feature coming soon!'); 
}

function showSystemSettings() { 
    const modal = document.createElement('div');
    modal.className = 'modal fade';
    modal.innerHTML = `
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">
                        <i class="fas fa-sliders-h me-2"></i>
                        System Settings
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-6">
                            <h6>Application Settings</h6>
                            <div class="mb-3">
                                <label class="form-label">Maintenance Mode</label>
                                <div class="form-check form-switch">
                                    <input class="form-check-input" type="checkbox" id="maintenanceMode">
                                    <label class="form-check-label" for="maintenanceMode">Enable Maintenance Mode</label>
                                </div>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Registration</label>
                                <div class="form-check form-switch">
                                    <input class="form-check-input" type="checkbox" id="allowRegistration" checked>
                                    <label class="form-check-label" for="allowRegistration">Allow New Registrations</label>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <h6>Performance Settings</h6>
                            <div class="mb-3">
                                <label class="form-label">Cache Duration (minutes)</label>
                                <input type="number" class="form-control" value="30" min="1" max="1440">
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Max Users Online</label>
                                <input type="number" class="form-control" value="1000" min="10">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary">Save Settings</button>
                </div>
            </div>
        </div>
    `;
    document.body.appendChild(modal);
    new bootstrap.Modal(modal).show();
}

function showEmailTools() { 
    window.location.href = '#';
    showBroadcastModal();
}

function showReports() { 
    window.open('/admin/analytics/export', '_blank');
    showAlert('Downloading analytics report...', 'info');
}

function showBackup() { 
    const modal = document.createElement('div');
    modal.className = 'modal fade';
    modal.innerHTML = `
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">
                        <i class="fas fa-database me-2"></i>
                        Backup & Security
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="d-grid gap-3">
                        <button class="btn btn-outline-primary" onclick="createBackup()">
                            <i class="fas fa-download me-2"></i>
                            Download Database Backup
                        </button>
                        <button class="btn btn-outline-info" onclick="viewSecurityLogs()">
                            <i class="fas fa-shield-alt me-2"></i>
                            View Security Logs
                        </button>
                        <button class="btn btn-outline-warning" onclick="systemCheck()">
                            <i class="fas fa-stethoscope me-2"></i>
                            Run System Health Check
                        </button>
                    </div>
                    <div class="mt-3">
                        <small class="text-muted">
                            <i class="fas fa-info-circle me-1"></i>
                            Last backup: Today at 3:00 AM (automatic)
                        </small>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    `;
    document.body.appendChild(modal);
    new bootstrap.Modal(modal).show();
}

function showMaintenanceModal() { 
    showAlert('Maintenance Mode feature coming soon!'); 
}

function showPaymentIssues() { 
    showAlert('Payment Issues tracker coming soon!'); 
}

function showCompletionRates() { 
    showAlert('Goal Completion Rates coming soon!'); 
}

function clearAllAlerts() { 
    showAlert('All alerts cleared!', 'success'); 
}

function createBackup() {
    showAlert('Creating database backup...', 'info');
    // In real implementation, this would trigger a backup endpoint
}

function viewSecurityLogs() {
    showAlert('Security logs feature coming soon!', 'info');
}

function systemCheck() {
    showAlert('Running system health check...', 'info');
    setTimeout(() => {
        showAlert('System health check completed - All systems normal!', 'success');
    }, 2000);
}

// Upgrade user functionality
document.getElementById('confirmUpgrade').addEventListener('click', function() {
    const userId = document.getElementById('upgradeUserId').value;
    const plan = document.querySelector('input[name="subscriptionPlan"]:checked').value;
    
    this.disabled = true;
    this.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Upgrading...';
    
    fetch(`/admin/users/${userId}/upgrade`, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ plan })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            bootstrap.Modal.getInstance(document.getElementById('upgradeUserModal')).hide();
            showAlert(`User successfully upgraded to ${plan} plan!`, 'success');
            setTimeout(() => window.location.reload(), 2000);
        } else {
            throw new Error(data.error || 'Failed to upgrade user');
        }
    })
    .catch(error => {
        console.error('Error:', error);
        showAlert('Error upgrading user: ' + error.message, 'danger');
        this.disabled = false;
        this.innerHTML = '<i class="fas fa-crown me-1"></i> Upgrade User';
    });
});
</script>

<style>
/* Enhanced Admin Dashboard Styles */
.admin-dashboard {
    background: #f8fafc;
    min-height: 100vh;
}

/* Dashboard Header */
.dashboard-header {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    padding: 2rem 0;
    margin-bottom: 0;
}

.dashboard-title {
    font-size: 2.5rem;
    font-weight: 700;
    margin-bottom: 0.5rem;
}

.dashboard-subtitle {
    font-size: 1.1rem;
    opacity: 0.9;
    margin-bottom: 0;
}

.header-actions {
    display: flex;
    align-items: center;
    gap: 2rem;
    justify-content: flex-end;
}

.quick-stats {
    display: flex;
    gap: 2rem;
}

.stat-item {
    text-align: center;
}

.stat-value {
    display: block;
    font-size: 1.8rem;
    font-weight: 700;
    color: #ffd700;
}

.stat-label {
    font-size: 0.85rem;
    opacity: 0.8;
}

.header-buttons {
    display: flex;
    gap: 1rem;
}

/* Metric Cards */
.metric-card {
    background: white;
    border-radius: 16px;
    padding: 1.5rem;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
    border: 1px solid #f0f2f5;
    transition: all 0.3s ease;
    height: 100%;
    position: relative;
    overflow: hidden;
}

.metric-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);
}

.metric-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1rem;
}

.metric-icon {
    width: 50px;
    height: 50px;
    border-radius: 12px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.5rem;
    color: white;
}

.metric-users .metric-icon { background: linear-gradient(135deg, #667eea, #764ba2); }
.metric-revenue .metric-icon { background: linear-gradient(135deg, #38a169, #2f855a); }
.metric-goals .metric-icon { background: linear-gradient(135deg, #ff6b6b, #ee5a52); }
.metric-premium .metric-icon { background: linear-gradient(135deg, #fbbf24, #f59e0b); }

.metric-number {
    font-size: 2.5rem;
    font-weight: 800;
    color: #1a202c;
    margin-bottom: 0.25rem;
}

.metric-label {
    color: #4a5568;
    font-size: 0.9rem;
    margin-bottom: 1rem;
}

.metric-change {
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.change-indicator {
    display: flex;
    align-items: center;
    gap: 0.25rem;
    font-size: 0.8rem;
    font-weight: 600;
    padding: 0.2rem 0.5rem;
    border-radius: 12px;
}

.change-indicator.positive {
    color: #38a169;
    background: #f0fff4;
}

.change-indicator.negative {
    color: #e53e3e;
    background: #fef5e7;
}

.change-period {
    font-size: 0.8rem;
    color: #6c757d;
}

.metric-chart {
    margin-top: 1rem;
    height: 60px;
}

/* Analytics Panel */
.analytics-panel {
    background: white;
    border-radius: 16px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
    border: 1px solid #f0f2f5;
    height: 600px;
}

.panel-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1.5rem;
    border-bottom: 1px solid #f0f2f5;
}

.panel-title {
    margin: 0;
    font-size: 1.2rem;
    font-weight: 600;
    color: #1a202c;
}

.panel-content {
    padding: 1.5rem;
    height: calc(100% - 80px);
    overflow: hidden;
}

.analytics-tabs .nav-tabs {
    border-bottom: 1px solid #e9ecef;
    margin-bottom: 1.5rem;
}

.analytics-tabs .nav-link {
    border: none;
    color: #6c757d;
    padding: 0.75rem 1.5rem;
    font-weight: 500;
}

.analytics-tabs .nav-link.active {
    color: #667eea;
    border-bottom: 2px solid #667eea;
    background: none;
}

.analytics-tabs .tab-content {
    height: calc(100% - 60px);
}

.analytics-tabs .tab-pane {
    height: 100%;
    position: relative;
}

.analytics-tabs .tab-pane canvas {
    width: 100% !important;
    height: 100% !important;
    max-height: 400px;
}

/* Management Panel */
.management-panel {
    background: white;
    border-radius: 16px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
    border: 1px solid #f0f2f5;
    height: auto;
    min-height: 600px;
}

.management-grid {
    display: grid;
    gap: 1rem;
    grid-template-rows: repeat(6, 1fr);
    height: auto;
}

.management-item {
    display: flex;
    align-items: center;
    padding: 1rem;
    border: 1px solid #f0f2f5;
    border-radius: 12px;
    cursor: pointer;
    transition: all 0.3s ease;
    min-height: 70px;
}

.management-item:hover {
    background: #f8fafc;
    border-color: #667eea;
    transform: translateX(4px);
}

.item-icon {
    width: 40px;
    height: 40px;
    border-radius: 10px;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    margin-right: 1rem;
    flex-shrink: 0;
}

.item-icon.users { background: linear-gradient(135deg, #667eea, #764ba2); }
.item-icon.moderation { background: linear-gradient(135deg, #ff6b6b, #ee5a52); }
.item-icon.settings { background: linear-gradient(135deg, #38a169, #2f855a); }
.item-icon.email { background: linear-gradient(135deg, #fbbf24, #f59e0b); }
.item-icon.reports { background: linear-gradient(135deg, #8b5cf6, #7c3aed); }
.item-icon.backup { background: linear-gradient(135deg, #06b6d4, #0891b2); }

.item-content {
    flex: 1;
}

.item-content h6 {
    margin: 0 0 0.25rem 0;
    font-size: 0.95rem;
    font-weight: 600;
    color: #1a202c;
}

.item-content p {
    margin: 0;
    font-size: 0.8rem;
    color: #6c757d;
    line-height: 1.4;
}

.item-arrow {
    color: #6c757d;
    transition: all 0.3s ease;
}

.management-item:hover .item-arrow {
    color: #667eea;
    transform: translateX(4px);
}

/* Activity Panel */
.activity-panel {
    background: white;
    border-radius: 16px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
    border: 1px solid #f0f2f5;
    height: 400px;
}

.activity-list {
    max-height: 300px;
    overflow-y: auto;
}

.activity-item {
    display: flex;
    align-items: center;
    padding: 1rem;
    border-bottom: 1px solid #f8fafc;
    transition: all 0.3s ease;
}

.activity-item:last-child {
    border-bottom: none;
}

.activity-item:hover {
    background: #f8fafc;
}

.activity-avatar {
    margin-right: 1rem;
}

.avatar-circle {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-weight: 600;
    font-size: 1rem;
}

.avatar-circle.free {
    background: linear-gradient(135deg, #6c757d, #495057);
}

.avatar-circle.premium {
    background: linear-gradient(135deg, #fbbf24, #f59e0b);
}

.activity-details {
    flex: 1;
}

.activity-title {
    margin: 0 0 0.25rem 0;
    font-size: 0.95rem;
    font-weight: 600;
    color: #1a202c;
}

.activity-description {
    margin: 0;
    font-size: 0.8rem;
    color: #6c757d;
}

.badge-premium {
    background: linear-gradient(135deg, #fbbf24, #f59e0b);
    color: white;
    font-size: 0.7rem;
    padding: 0.2rem 0.5rem;
    border-radius: 12px;
    margin-left: 0.5rem;
}

.activity-actions {
    display: flex;
    gap: 0.5rem;
}

/* Modal Enhancements */
.modal-content {
    border: none;
    border-radius: 16px;
    box-shadow: 0 20px 60px rgba(0, 0, 0, 0.2);
}

.modal-header {
    border-bottom: 1px solid #f0f2f5;
    padding: 1.5rem;
}

.modal-body {
    padding: 1.5rem;
}

.modal-footer {
    border-top: 1px solid #f0f2f5;
    padding: 1.5rem;
}

/* Responsive Design */
@media (max-width: 768px) {
    .dashboard-title {
        font-size: 1.8rem;
    }
    
    .header-actions {
        flex-direction: column;
        gap: 1rem;
        align-items: stretch;
    }
    
    .quick-stats {
        justify-content: space-around;
    }
    
    .performance-grid {
        grid-template-columns: 1fr;
    }
    
    .management-grid {
        grid-template-columns: 1fr;
    }
    
    .metric-card {
        margin-bottom: 1rem;
    }
}

@media (max-width: 480px) {
    .dashboard-header {
        padding: 1rem 0;
    }
    
    .quick-stats {
        flex-direction: column;
        gap: 1rem;
    }
    
    .panel-header {
        padding: 1rem;
    }
    
    .panel-content {
        padding: 1rem;
    }
}
</style> 