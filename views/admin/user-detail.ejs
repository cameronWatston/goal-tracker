<div class="container-fluid py-4">
    <div class="row mb-4">
        <div class="col-12 d-flex justify-content-between align-items-center">
            <div>
                <h1 class="h3 text-dark mb-0">User Details</h1>
                <p class="text-muted">View and manage user information</p>
            </div>
            <div>
                <a href="/admin/users" class="btn btn-outline-secondary">
                    <i class="fas fa-arrow-left me-1"></i> Back to Users
                </a>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- User info card -->
        <div class="col-lg-4 mb-4">
            <div class="card border-0 shadow-sm">
                <div class="card-header bg-white">
                    <h5 class="mb-0">User Information</h5>
                </div>
                <div class="card-body">
                    <div class="text-center mb-4">
                        <div class="avatar bg-primary text-white rounded-circle mx-auto" style="width: 80px; height: 80px; line-height: 80px; font-size: 36px;">
                            <%= userDetail.username.charAt(0).toUpperCase() %>
                        </div>
                        <h4 class="mt-3"><%= userDetail.username %></h4>
                        <p class="text-muted mb-1"><%= userDetail.email %></p>
                        <div class="d-flex justify-content-center">
                            <% if (userDetail.subscription_plan === 'monthly') { %>
                                <span class="badge bg-success me-2">Monthly</span>
                            <% } else if (userDetail.subscription_plan === 'annual') { %>
                                <span class="badge bg-success me-2">Annual</span>
                            <% } else { %>
                                <span class="badge bg-secondary me-2">Free</span>
                            <% } %>

                            <% if (userDetail.is_admin === 1) { %>
                                <span class="badge bg-danger">Admin</span>
                            <% } %>
                        </div>
                    </div>

                    <ul class="list-group list-group-flush">
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <span>ID</span>
                            <span class="text-muted">#<%= userDetail.id %></span>
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <span>Joined</span>
                            <span class="text-muted"><%= new Date(userDetail.created_at).toLocaleDateString() %></span>
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <span>Verified</span>
                            <% if (userDetail.is_verified === 1) { %>
                                <span class="badge bg-success">Yes</span>
                            <% } else { %>
                                <span class="badge bg-warning">No</span>
                            <% } %>
                        </li>
                        <% if (userDetail.subscription_plan === 'monthly' || userDetail.subscription_plan === 'annual') { %>
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                <span>Plan Expires</span>
                                <span class="text-muted"><%= userDetail.subscription_end ? new Date(userDetail.subscription_end).toLocaleDateString() : 'N/A' %></span>
                            </li>
                        <% } %>
                    </ul>
                </div>
                <div class="card-footer bg-white">
                    <div class="d-grid gap-2">
                        <% if (userDetail.subscription_plan === 'free') { %>
                            <button class="btn btn-primary" onclick="openUpgradeModal('<%= userDetail.id %>', '<%= userDetail.username %>')">
                                <i class="fas fa-crown me-1"></i> Upgrade User
                            </button>
                        <% } else { %>
                            <button class="btn btn-outline-secondary" onclick="confirmDowngrade('<%= userDetail.id %>')">
                                <i class="fas fa-arrow-down me-1"></i> Downgrade to Free
                            </button>
                        <% } %>
                        
                        <% if (userDetail.is_admin === 1) { %>
                            <% if (userDetail.id !== user.id) { %>
                                <button class="btn btn-outline-warning" onclick="toggleAdminStatus('<%= userDetail.id %>', '<%= userDetail.username %>', false)">
                                    <i class="fas fa-user me-1"></i> Remove Admin Status
                                </button>
                            <% } %>
                        <% } else { %>
                            <button class="btn btn-outline-warning" onclick="toggleAdminStatus('<%= userDetail.id %>', '<%= userDetail.username %>', true)">
                                <i class="fas fa-user-shield me-1"></i> Make Admin
                            </button>
                        <% } %>
                        
                        <% if (userDetail.id !== user.id) { %>
                            <button class="btn btn-outline-danger" onclick="confirmDeleteUser('<%= userDetail.id %>', '<%= userDetail.username %>')">
                                <i class="fas fa-trash-alt me-1"></i> Delete User
                            </button>
                        <% } %>
                    </div>
                </div>
            </div>
        </div>

        <!-- User content tabs -->
        <div class="col-lg-8">
            <div class="card border-0 shadow-sm">
                <div class="card-header bg-white">
                    <ul class="nav nav-tabs card-header-tabs" id="userContentTabs" role="tablist">
                        <li class="nav-item" role="presentation">
                            <button class="nav-link active" id="goals-tab" data-bs-toggle="tab" data-bs-target="#goals" type="button" role="tab" aria-controls="goals" aria-selected="true">
                                <i class="fas fa-trophy me-1"></i> Goals (<%= goals ? goals.length : 0 %>)
                            </button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="posts-tab" data-bs-toggle="tab" data-bs-target="#posts" type="button" role="tab" aria-controls="posts" aria-selected="false">
                                <i class="fas fa-comments me-1"></i> Posts (<%= posts ? posts.length : 0 %>)
                            </button>
                        </li>
                    </ul>
                </div>
                <div class="card-body">
                    <div class="tab-content" id="userContentTabsContent">
                        <!-- Goals tab -->
                        <div class="tab-pane fade show active" id="goals" role="tabpanel" aria-labelledby="goals-tab">
                            <% if (goals && goals.length > 0) { %>
                                <div class="table-responsive">
                                    <table class="table table-hover align-middle">
                                        <thead class="table-light">
                                            <tr>
                                                <th>Title</th>
                                                <th>Category</th>
                                                <th>Target Date</th>
                                                <th>Status</th>
                                                <th>Actions</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <% goals.forEach(goal => { %>
                                                <tr>
                                                    <td><%= goal.title %></td>
                                                    <td><%= goal.category || 'N/A' %></td>
                                                    <td><%= new Date(goal.target_date).toLocaleDateString() %></td>
                                                    <td>
                                                        <% if (goal.status === 'completed') { %>
                                                            <span class="badge bg-success">Completed</span>
                                                        <% } else if (goal.status === 'active') { %>
                                                            <span class="badge bg-primary">Active</span>
                                                        <% } else { %>
                                                            <span class="badge bg-secondary"><%= goal.status %></span>
                                                        <% } %>
                                                    </td>
                                                    <td>
                                                        <div class="btn-group btn-group-sm">
                                                            <a href="/goals/<%= goal.id %>" class="btn btn-outline-primary" target="_blank">
                                                                <i class="fas fa-eye"></i>
                                                            </a>
                                                            <button type="button" class="btn btn-outline-danger" onclick="deleteGoal('<%= goal.id %>')">
                                                                <i class="fas fa-trash-alt"></i>
                                                            </button>
                                                        </div>
                                                    </td>
                                                </tr>
                                            <% }); %>
                                        </tbody>
                                    </table>
                                </div>
                            <% } else { %>
                                <div class="text-center py-5">
                                    <i class="fas fa-trophy fa-3x text-muted mb-3"></i>
                                    <h5>No Goals</h5>
                                    <p class="text-muted">This user hasn't created any goals yet.</p>
                                </div>
                            <% } %>
                        </div>
                        
                        <!-- Posts tab -->
                        <div class="tab-pane fade" id="posts" role="tabpanel" aria-labelledby="posts-tab">
                            <% if (posts && posts.length > 0) { %>
                                <div class="table-responsive">
                                    <table class="table table-hover align-middle">
                                        <thead class="table-light">
                                            <tr>
                                                <th>Title</th>
                                                <th>Created</th>
                                                <th>Actions</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <% posts.forEach(post => { %>
                                                <tr>
                                                    <td><%= post.title %></td>
                                                    <td><%= new Date(post.created_at).toLocaleDateString() %></td>
                                                    <td>
                                                        <div class="btn-group btn-group-sm">
                                                            <a href="/community/post/<%= post.id %>" class="btn btn-outline-primary" target="_blank">
                                                                <i class="fas fa-eye"></i>
                                                            </a>
                                                            <button type="button" class="btn btn-outline-danger" onclick="deletePost('<%= post.id %>')">
                                                                <i class="fas fa-trash-alt"></i>
                                                            </button>
                                                        </div>
                                                    </td>
                                                </tr>
                                            <% }); %>
                                        </tbody>
                                    </table>
                                </div>
                            <% } else { %>
                                <div class="text-center py-5">
                                    <i class="fas fa-comments fa-3x text-muted mb-3"></i>
                                    <h5>No Posts</h5>
                                    <p class="text-muted">This user hasn't created any community posts yet.</p>
                                </div>
                            <% } %>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Upgrade User Modal -->
<div class="modal fade" id="upgradeUserModal" tabindex="-1" aria-labelledby="upgradeUserModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="upgradeUserModalLabel">Upgrade User</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Select a subscription plan for <strong id="upgradeUserName"></strong>:</p>
                <input type="hidden" id="upgradeUserId" value="">
                <div class="form-check mb-3">
                    <input class="form-check-input" type="radio" name="subscriptionPlan" id="planMonthly" value="monthly" checked>
                    <label class="form-check-label" for="planMonthly">
                        Monthly Plan
                    </label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="subscriptionPlan" id="planAnnual" value="annual">
                    <label class="form-check-label" for="planAnnual">
                        Annual Plan
                    </label>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="confirmUpgrade">Upgrade User</button>
            </div>
        </div>
    </div>
</div>

<!-- Delete User Modal -->
<div class="modal fade" id="deleteUserModal" tabindex="-1" aria-labelledby="deleteUserModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteUserModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete the user <strong id="deleteUserName"></strong>?</p>
                <p class="text-danger">This action cannot be undone. All user data including goals, posts, and comments will be permanently deleted.</p>
                <input type="hidden" id="deleteUserId" value="">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDelete">Delete User</button>
            </div>
        </div>
    </div>
</div>

<script>
    // Upgrade user functionality
    function openUpgradeModal(userId, username) {
        document.getElementById('upgradeUserId').value = userId;
        document.getElementById('upgradeUserName').textContent = username;
        var upgradeModal = new bootstrap.Modal(document.getElementById('upgradeUserModal'));
        upgradeModal.show();
    }

    document.getElementById('confirmUpgrade').addEventListener('click', function() {
        const userId = document.getElementById('upgradeUserId').value;
        const plan = document.querySelector('input[name="subscriptionPlan"]:checked').value;
        
        this.disabled = true;
        this.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Upgrading...';
        
        fetch(`/admin/users/${userId}/upgrade`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ plan })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                // Close modal
                bootstrap.Modal.getInstance(document.getElementById('upgradeUserModal')).hide();
                
                // Show success alert
                const alertPlaceholder = document.createElement('div');
                alertPlaceholder.className = 'alert alert-success alert-dismissible fade show';
                alertPlaceholder.role = 'alert';
                alertPlaceholder.innerHTML = `
                    User successfully upgraded to ${plan} plan!
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                `;
                document.querySelector('.container-fluid').prepend(alertPlaceholder);
                
                // Reload page after a short delay
                setTimeout(() => {
                    window.location.reload();
                }, 2000);
            } else {
                throw new Error(data.error || 'Failed to upgrade user');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('Error upgrading user: ' + error.message);
            
            // Reset button
            this.disabled = false;
            this.innerHTML = 'Upgrade User';
        });
    });

    // Downgrade user functionality
    function confirmDowngrade(userId) {
        if (confirm('Are you sure you want to downgrade this user to the free plan?')) {
            fetch(`/admin/users/${userId}/upgrade`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ plan: 'free' })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Show success alert
                    const alertPlaceholder = document.createElement('div');
                    alertPlaceholder.className = 'alert alert-success alert-dismissible fade show';
                    alertPlaceholder.role = 'alert';
                    alertPlaceholder.innerHTML = `
                        User successfully downgraded to free plan!
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    `;
                    document.querySelector('.container-fluid').prepend(alertPlaceholder);
                    
                    // Reload page after a short delay
                    setTimeout(() => {
                        window.location.reload();
                    }, 2000);
                } else {
                    throw new Error(data.error || 'Failed to downgrade user');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error downgrading user: ' + error.message);
            });
        }
    }

    // Toggle admin status
    function toggleAdminStatus(userId, username, makeAdmin) {
        if (confirm(`Are you sure you want to ${makeAdmin ? 'make' : 'remove'} ${username} ${makeAdmin ? 'an admin' : 'from admin role'}?`)) {
            fetch(`/admin/users/${userId}/set-admin`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ isAdmin: makeAdmin })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Show success alert
                    const alertPlaceholder = document.createElement('div');
                    alertPlaceholder.className = 'alert alert-success alert-dismissible fade show';
                    alertPlaceholder.role = 'alert';
                    alertPlaceholder.innerHTML = `
                        Admin status ${makeAdmin ? 'granted to' : 'removed from'} ${username}!
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    `;
                    document.querySelector('.container-fluid').prepend(alertPlaceholder);
                    
                    // Reload page after a short delay
                    setTimeout(() => {
                        window.location.reload();
                    }, 2000);
                } else {
                    throw new Error(data.error || 'Failed to update admin status');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error updating admin status: ' + error.message);
            });
        }
    }

    // Delete user functionality
    function confirmDeleteUser(userId, username) {
        document.getElementById('deleteUserId').value = userId;
        document.getElementById('deleteUserName').textContent = username;
        var deleteModal = new bootstrap.Modal(document.getElementById('deleteUserModal'));
        deleteModal.show();
    }

    document.getElementById('confirmDelete').addEventListener('click', function() {
        const userId = document.getElementById('deleteUserId').value;
        
        this.disabled = true;
        this.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Deleting...';
        
        fetch(`/admin/users/${userId}/delete`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            }
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                // Show success alert and redirect to users list
                window.location.href = '/admin/users?deleted=true';
            } else {
                throw new Error(data.error || 'Failed to delete user');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('Error deleting user: ' + error.message);
            
            // Reset button
            this.disabled = false;
            this.innerHTML = 'Delete User';
        });
    });

    // Delete goal functionality
    function deleteGoal(goalId) {
        if (confirm('Are you sure you want to delete this goal? This action cannot be undone.')) {
            fetch(`/admin/goals/${goalId}/delete`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Show success alert
                    const alertPlaceholder = document.createElement('div');
                    alertPlaceholder.className = 'alert alert-success alert-dismissible fade show';
                    alertPlaceholder.role = 'alert';
                    alertPlaceholder.innerHTML = `
                        Goal successfully deleted!
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    `;
                    document.querySelector('.container-fluid').prepend(alertPlaceholder);
                    
                    // Reload page after a short delay
                    setTimeout(() => {
                        window.location.reload();
                    }, 2000);
                } else {
                    throw new Error(data.error || 'Failed to delete goal');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error deleting goal: ' + error.message);
            });
        }
    }

    // Delete post functionality
    function deletePost(postId) {
        if (confirm('Are you sure you want to delete this post? This action cannot be undone.')) {
            fetch(`/admin/posts/${postId}/delete`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Show success alert
                    const alertPlaceholder = document.createElement('div');
                    alertPlaceholder.className = 'alert alert-success alert-dismissible fade show';
                    alertPlaceholder.role = 'alert';
                    alertPlaceholder.innerHTML = `
                        Post successfully deleted!
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    `;
                    document.querySelector('.container-fluid').prepend(alertPlaceholder);
                    
                    // Reload page after a short delay
                    setTimeout(() => {
                        window.location.reload();
                    }, 2000);
                } else {
                    throw new Error(data.error || 'Failed to delete post');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error deleting post: ' + error.message);
            });
        }
    }
</script> 