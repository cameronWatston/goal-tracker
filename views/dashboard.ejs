<div class="row mb-4">
    <div class="col-12">
        <div class="card shadow-sm">
            <div class="card-body p-4">
                <div class="d-flex align-items-center">
                    <div>
                        <h2 class="mb-1">Welcome back, <%= user.username %>!</h2>
                        <p class="text-muted mb-0">Here's an overview of your goal progress</p>
                    </div>
                    <div class="ms-auto">
                        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#newGoalModal">
                            <i class="fas fa-plus me-2"></i> Add New Goal
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row mb-4">
    <div class="col-md-3">
        <div class="card bg-primary text-white shadow-sm h-100">
            <div class="card-body p-4">
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <h5 class="mb-0">Active Goals</h5>
                    <i class="fas fa-bullseye fa-2x opacity-50"></i>
                </div>
                <h2 class="mb-0"><%= goals.filter(g => g.status === 'active').length || 0 %></h2>
                <p class="small mb-0 opacity-75"><%= goals.filter(g => g.status === 'active').length === 0 ? 'Start adding your first goal!' : 'Goals in progress' %></p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-success text-dark shadow-sm h-100">
            <div class="card-body p-4">
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <h5 class="mb-0">Completed</h5>
                    <i class="fas fa-check-circle fa-2x opacity-50"></i>
                </div>
                <h2 class="mb-0"><%= goals.filter(g => g.status === 'completed').length || 0 %></h2>
                <p class="small mb-0 opacity-75"><%= goals.filter(g => g.status === 'completed').length === 0 ? 'No completed goals yet' : 'Goals achieved' %></p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-warning text-dark shadow-sm h-100">
            <div class="card-body p-4">
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <h5 class="mb-0">Due Soon</h5>
                    <i class="fas fa-clock fa-2x opacity-50"></i>
                </div>
                <% 
                const now = new Date();
                const oneWeekLater = new Date(now);
                oneWeekLater.setDate(now.getDate() + 7);
                
                const dueSoonGoals = goals.filter(g => {
                    const targetDate = new Date(g.target_date);
                    return g.status === 'active' && targetDate > now && targetDate <= oneWeekLater;
                });
                %>
                <h2 class="mb-0"><%= dueSoonGoals.length || 0 %></h2>
                <p class="small mb-0 opacity-75"><%= dueSoonGoals.length === 0 ? 'No goals due soon' : 'Goals due this week' %></p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-info text-white shadow-sm h-100">
            <div class="card-body p-4">
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <h5 class="mb-0">Total Milestones</h5>
                    <i class="fas fa-trophy fa-2x opacity-50"></i>
                </div>
                <% 
                // This would require fetching milestone counts from backend
                // For now, we'll use a placeholder
                %>
                <h2 class="mb-0" id="milestone-count">-</h2>
                <p class="small mb-0 opacity-75">Milestones to achieve</p>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-lg-8">
        <div class="card shadow-sm mb-4">
            <div class="card-header bg-white py-3">
                <h5 class="mb-0">Your Goals</h5>
            </div>
            <div class="card-body p-0">
                <% if (goals && goals.length > 0) { %>
                    <div class="table-responsive">
                        <table class="table mb-0">
                            <thead class="table-light">
                                <tr>
                                    <th>Goal</th>
                                    <th>Category</th>
                                    <th>Target Date</th>
                                    <th>Status</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% goals.forEach(goal => { %>
                                    <tr>
                                        <td>
                                            <div class="d-flex align-items-center">
                                                <div class="ms-2">
                                                    <h6 class="mb-0"><%= goal.title %></h6>
                                                    <small class="text-muted"><%= goal.description ? (goal.description.length > 50 ? goal.description.substring(0, 50) + '...' : goal.description) : '' %></small>
                                                </div>
                                            </div>
                                        </td>
                                        <td><span class="badge bg-secondary"><%= goal.category || 'General' %></span></td>
                                        <td>
                                            <% 
                                            const targetDate = new Date(goal.target_date);
                                            const formattedDate = targetDate.toLocaleDateString('en-US', { 
                                                year: 'numeric', 
                                                month: 'short', 
                                                day: 'numeric' 
                                            });
                                            %>
                                            <%= formattedDate %>
                                        </td>
                                        <td>
                                            <% if (goal.status === 'active') { %>
                                                <span class="badge bg-primary">Active</span>
                                            <% } else if (goal.status === 'completed') { %>
                                                <span class="badge bg-success">Completed</span>
                                            <% } else { %>
                                                <span class="badge bg-secondary"><%= goal.status %></span>
                                            <% } %>
                                        </td>
                                        <td>
                                            <div class="btn-group btn-group-sm">
                                                <button type="button" class="btn btn-outline-primary view-goal-btn" data-goal-id="<%= goal.id %>">
                                                    <i class="fas fa-eye"></i>
                                                </button>
                                                <button type="button" class="btn btn-outline-secondary edit-goal-btn" data-goal-id="<%= goal.id %>">
                                                    <i class="fas fa-edit"></i>
                                                </button>
                                                <button type="button" class="btn btn-outline-danger delete-goal-btn" data-goal-id="<%= goal.id %>">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                <% }) %>
                            </tbody>
                        </table>
                    </div>
                <% } else { %>
                    <div class="p-5 text-center">
                        <div class="mb-3">
                            <i class="fas fa-clipboard-list text-warning fa-3x"></i>
                        </div>
                        <h5>You don't have any goals yet</h5>
                        <p class="text-muted mb-4">Start adding goals to track your progress</p>
                        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#newGoalModal">
                            <i class="fas fa-plus me-2"></i> Add Your First Goal
                        </button>
                    </div>
                <% } %>
            </div>
        </div>
    </div>
    
    <div class="col-lg-4">
        <div class="card shadow-sm mb-4">
            <div class="card-header bg-white py-3">
                <h5 class="mb-0"><i class="fas fa-brain text-warning me-2"></i> AI Assistant</h5>
            </div>
            <div class="card-body">
                <div class="d-flex align-items-start mb-3 pb-3 border-bottom">
                    <div class="flex-shrink-0">
                        <i class="fas fa-robot text-primary fa-2x"></i>
                    </div>
                    <div class="flex-grow-1 ms-3">
                        <p class="mb-0">Hello <%= user.username %>! I'm your AI goal assistant. Need help setting meaningful goals?</p>
                    </div>
                </div>

                <div class="mb-3">
                    <h6 class="mb-2">Need help with your goals?</h6>
                    <div class="d-grid gap-2">
                        <button class="btn btn-outline-primary btn-sm text-start ai-suggestion" data-suggestion="I want to get a six-pack in 6 months">
                            <i class="fas fa-dumbbell me-2"></i> I want to get a six-pack in 6 months
                        </button>
                        <button class="btn btn-outline-primary btn-sm text-start ai-suggestion" data-suggestion="I want to learn JavaScript in 3 months">
                            <i class="fas fa-code me-2"></i> I want to learn JavaScript in 3 months
                        </button>
                        <button class="btn btn-outline-primary btn-sm text-start ai-suggestion" data-suggestion="I want to save $10,000 this year">
                            <i class="fas fa-piggy-bank me-2"></i> I want to save $10,000 this year
                        </button>
                    </div>
                </div>

                <div class="input-group">
                    <input type="text" class="form-control" id="ai-input" placeholder="Ask AI assistant...">
                    <button class="btn btn-primary" id="ai-ask-btn">
                        <i class="fas fa-paper-plane"></i>
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- New Goal Modal -->
<div class="modal fade" id="newGoalModal" tabindex="-1" aria-labelledby="newGoalModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="newGoalModalLabel">Add New Goal</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="new-goal-form">
                    <div class="mb-3">
                        <label for="goalTitle" class="form-label">Goal Title</label>
                        <input type="text" class="form-control" id="goalTitle" placeholder="Enter goal title" required>
                        <div class="form-text">Be specific about what you want to achieve</div>
                    </div>
                    <div class="mb-3">
                        <label for="goalDescription" class="form-label">Description</label>
                        <textarea class="form-control" id="goalDescription" rows="3" placeholder="Describe your goal in detail for better AI milestones"></textarea>
                        <div class="form-text">More details help our AI create better milestones for you</div>
                    </div>
                    <div class="mb-3">
                        <label for="goalCategory" class="form-label">Category</label>
                        <select class="form-select" id="goalCategory" required>
                            <option value="">Select a category</option>
                            <option value="health">Health & Fitness</option>
                            <option value="career">Career & Education</option>
                            <option value="personal">Personal Development</option>
                            <option value="finance">Financial</option>
                            <option value="relationships">Relationships</option>
                            <option value="other">Other</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="goalDeadline" class="form-label">Target Date</label>
                        <input type="date" class="form-control" id="goalDeadline" required>
                        <div class="form-text">When do you want to achieve this goal?</div>
                    </div>
                </form>
                <div class="alert alert-info">
                    <i class="fas fa-lightbulb me-2"></i> After creating your goal, our AI will automatically generate milestones to help you achieve it.
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="save-goal-btn">Create Goal</button>
            </div>
        </div>
    </div>
</div>

<!-- Goal Details Modal (for viewing milestones) -->
<div class="modal fade" id="goalDetailsModal" tabindex="-1" aria-labelledby="goalDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="goalDetailsModalLabel">Goal Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="goal-details-content">
                    <div class="text-center p-5">
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                        <p class="mt-3">Loading goal details...</p>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- JavaScript for Goal Management -->
<script>
document.addEventListener('DOMContentLoaded', function() {
    // Save new goal
    document.getElementById('save-goal-btn').addEventListener('click', function() {
        const title = document.getElementById('goalTitle').value;
        const description = document.getElementById('goalDescription').value;
        const category = document.getElementById('goalCategory').value;
        const targetDate = document.getElementById('goalDeadline').value;
        
        if (!title || !targetDate || !category) {
            alert('Please fill in all required fields');
            return;
        }
        
        // Send request to create goal
        fetch('/api/goals', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                title,
                description,
                category,
                targetDate
            })
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            return response.json();
        })
        .then(data => {
            // Close modal and refresh page to show new goal
            const modal = bootstrap.Modal.getInstance(document.getElementById('newGoalModal'));
            modal.hide();
            window.location.reload();
        })
        .catch(error => {
            console.error('Error creating goal:', error);
            alert('Failed to create goal. Please try again.');
        });
    });
    
    // View goal details with milestones
    document.querySelectorAll('.view-goal-btn').forEach(button => {
        button.addEventListener('click', function() {
            const goalId = this.getAttribute('data-goal-id');
            
            // Get goal details with milestones
            fetch(`/api/goals/${goalId}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    // Display goal details and milestones
                    displayGoalDetails(data);
                    
                    // Open the modal
                    const modal = new bootstrap.Modal(document.getElementById('goalDetailsModal'));
                    modal.show();
                })
                .catch(error => {
                    console.error('Error fetching goal details:', error);
                    alert('Failed to load goal details. Please try again.');
                });
        });
    });
    
    // AI suggestion buttons
    document.querySelectorAll('.ai-suggestion').forEach(button => {
        button.addEventListener('click', function() {
            const suggestion = this.getAttribute('data-suggestion');
            document.getElementById('ai-input').value = suggestion;
        });
    });
    
    // Function to display goal details and milestones
    function displayGoalDetails(goal) {
        const container = document.getElementById('goal-details-content');
        
        // Format dates
        const targetDate = new Date(goal.target_date);
        const formattedTargetDate = targetDate.toLocaleDateString('en-US', { 
            year: 'numeric', 
            month: 'long', 
            day: 'numeric' 
        });
        
        // Build HTML for goal details
        let html = `
            <div class="goal-header mb-4">
                <h3>${goal.title}</h3>
                <div class="text-muted mb-3">${goal.description || 'No description provided'}</div>
                <div class="d-flex flex-wrap gap-3 mb-3">
                    <div><strong>Category:</strong> <span class="badge bg-secondary">${goal.category || 'General'}</span></div>
                    <div><strong>Target Date:</strong> ${formattedTargetDate}</div>
                    <div><strong>Status:</strong> <span class="badge ${goal.status === 'completed' ? 'bg-success' : 'bg-primary'}">${goal.status}</span></div>
                </div>
            </div>
            
            <h5 class="mb-3">Milestones</h5>
        `;
        
        // Add milestones if available
        if (goal.milestones && goal.milestones.length > 0) {
            html += '<div class="timeline mb-4">';
            
            goal.milestones.forEach((milestone, index) => {
                const milestoneDate = new Date(milestone.target_date);
                const formattedMilestoneDate = milestoneDate.toLocaleDateString('en-US', { 
                    year: 'numeric', 
                    month: 'short', 
                    day: 'numeric' 
                });
                
                html += `
                    <div class="timeline-item">
                        <div class="timeline-item-marker">
                            <div class="timeline-item-marker-text">${index + 1}</div>
                            <div class="timeline-item-marker-indicator bg-${milestone.status === 'completed' ? 'success' : 'primary'}"></div>
                        </div>
                        <div class="timeline-item-content">
                            <div class="d-flex justify-content-between align-items-start mb-1">
                                <div class="fw-bold">${milestone.title}</div>
                                <div class="small text-muted">${formattedMilestoneDate}</div>
                            </div>
                            <div class="text-muted mb-2">${milestone.description}</div>
                            ${milestone.metrics && milestone.metrics.length > 0 ? 
                                `<div class="small">
                                    <strong>Success Metrics:</strong>
                                    <ul class="mb-0 ps-3">
                                        ${milestone.metrics.map(metric => `<li>${metric}</li>`).join('')}
                                    </ul>
                                </div>` : 
                                ''
                            }
                        </div>
                    </div>
                `;
            });
            
            html += '</div>';
        } else {
            html += `
                <div class="alert alert-warning">
                    <i class="fas fa-exclamation-triangle me-2"></i> No milestones available for this goal.
                </div>
            `;
        }
        
        container.innerHTML = html;
    }
});
</script>

<style>
/* Timeline styling for milestones */
.timeline {
    position: relative;
    padding-left: 1.75rem;
}

.timeline-item {
    position: relative;
    padding-bottom: 2rem;
}

.timeline-item:last-child {
    padding-bottom: 0;
}

.timeline-item-marker {
    position: absolute;
    left: -1.75rem;
    width: 1.75rem;
    display: flex;
    flex-direction: column;
    align-items: center;
}

.timeline-item-marker-text {
    width: 1.75rem;
    height: 1.75rem;
    text-align: center;
    background-color: #fff;
    border: 1px solid #ddd;
    border-radius: 100%;
    line-height: 1.75rem;
    font-size: 0.85rem;
    font-weight: 600;
    color: #777;
}

.timeline-item-marker-indicator {
    background-color: var(--primary-color);
    height: 100%;
    width: 3px;
}

.timeline-item:last-child .timeline-item-marker-indicator {
    height: 1.75rem;
}
</style> 